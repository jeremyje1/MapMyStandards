"""Initial schema migration

Revision ID: 93dac6dcdc1a
Revises: 
Create Date: 2025-08-29 13:09:43.758119+00:00

"""
from typing import Sequence, Union
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '93dac6dcdc1a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accreditation_standards',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('accreditor', sa.String(length=20), nullable=False),
    sa.Column('standard_id', sa.String(length=20), nullable=False),
    sa.Column('standard_title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('evidence_requirements', sa.JSON(), nullable=True),
    sa.Column('is_required', sa.Boolean(), nullable=True),
    sa.Column('applies_to_types', sa.JSON(), nullable=True),
    sa.Column('version', sa.String(length=20), nullable=True),
    sa.Column('effective_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('accreditor', 'standard_id', 'version')
    )
    op.create_index('idx_accreditor_standards', 'accreditation_standards', ['accreditor'], unique=False)
    op.create_table('institutions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('ipeds_id', sa.String(length=20), nullable=True),
    sa.Column('state', sa.String(length=2), nullable=True),
    sa.Column('institution_type', sa.String(length=50), nullable=True),
    sa.Column('enrollment_size', sa.String(length=20), nullable=True),
    sa.Column('primary_accreditor', sa.String(length=20), nullable=True),
    sa.Column('subscription_status', sa.String(length=20), nullable=True),
    sa.Column('subscription_plan', sa.String(length=50), nullable=True),
    sa.Column('trial_end_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('onboarding_completed', sa.Boolean(), nullable=True),
    sa.Column('onboarding_data', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ipeds_id')
    )
    op.create_table('processing_jobs',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('job_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('entity_id', sa.String(length=36), nullable=True),
    sa.Column('entity_type', sa.String(length=50), nullable=True),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('current_step', sa.String(length=255), nullable=True),
    sa.Column('steps_completed', sa.Integer(), nullable=True),
    sa.Column('total_steps', sa.Integer(), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('processing_time_seconds', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_job_entity', 'processing_jobs', ['entity_id'], unique=False)
    op.create_index('idx_job_status', 'processing_jobs', ['status'], unique=False)
    op.create_index('idx_job_type', 'processing_jobs', ['job_type'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=True),
    sa.Column('institution_id', sa.String(length=36), nullable=True),
    sa.Column('auth_provider', sa.String(length=20), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('institution_id', sa.String(length=36), nullable=True),
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=True),
    sa.Column('entity_id', sa.String(length=36), nullable=True),
    sa.Column('old_value', sa.JSON(), nullable=True),
    sa.Column('new_value', sa.JSON(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_action', 'audit_logs', ['action'], unique=False)
    op.create_index('idx_audit_institution', 'audit_logs', ['institution_id'], unique=False)
    op.create_index('idx_audit_timestamp', 'audit_logs', ['timestamp'], unique=False)
    op.create_index('idx_audit_user', 'audit_logs', ['user_id'], unique=False)
    op.create_table('compliance_snapshots',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('institution_id', sa.String(length=36), nullable=False),
    sa.Column('accreditor', sa.String(length=20), nullable=False),
    sa.Column('overall_compliance_score', sa.Float(), nullable=True),
    sa.Column('standards_addressed', sa.Integer(), nullable=True),
    sa.Column('total_standards', sa.Integer(), nullable=True),
    sa.Column('documents_processed', sa.Integer(), nullable=True),
    sa.Column('evidence_items', sa.Integer(), nullable=True),
    sa.Column('category_scores', sa.JSON(), nullable=True),
    sa.Column('critical_gaps', sa.Integer(), nullable=True),
    sa.Column('major_gaps', sa.Integer(), nullable=True),
    sa.Column('minor_gaps', sa.Integer(), nullable=True),
    sa.Column('gap_details', sa.JSON(), nullable=True),
    sa.Column('score_change_from_previous', sa.Float(), nullable=True),
    sa.Column('trend_direction', sa.String(length=10), nullable=True),
    sa.Column('snapshot_date', sa.DateTime(), nullable=True),
    sa.Column('generated_by_id', sa.String(length=36), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['generated_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_institution_snapshots', 'compliance_snapshots', ['institution_id'], unique=False)
    op.create_index('idx_snapshot_date', 'compliance_snapshots', ['snapshot_date'], unique=False)
    op.create_table('documents',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('institution_id', sa.String(length=36), nullable=False),
    sa.Column('uploaded_by_id', sa.String(length=36), nullable=True),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=True),
    sa.Column('file_path', sa.String(length=500), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('file_hash', sa.String(length=64), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('document_type', sa.String(length=50), nullable=True),
    sa.Column('document_date', sa.DateTime(), nullable=True),
    sa.Column('academic_year', sa.String(length=20), nullable=True),
    sa.Column('processing_status', sa.String(length=20), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('processing_time_seconds', sa.Float(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('extracted_text', sa.Text(), nullable=True),
    sa.Column('page_count', sa.Integer(), nullable=True),
    sa.Column('word_count', sa.Integer(), nullable=True),
    sa.Column('ai_summary', sa.Text(), nullable=True),
    sa.Column('ai_insights', sa.JSON(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_document_status', 'documents', ['processing_status'], unique=False)
    op.create_index('idx_document_type', 'documents', ['document_type'], unique=False)
    op.create_index('idx_institution_documents', 'documents', ['institution_id'], unique=False)
    op.create_table('reports',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('institution_id', sa.String(length=36), nullable=False),
    sa.Column('requested_by_id', sa.String(length=36), nullable=True),
    sa.Column('report_type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('accreditor', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('executive_summary', sa.Text(), nullable=True),
    sa.Column('report_data', sa.JSON(), nullable=True),
    sa.Column('file_path', sa.String(length=500), nullable=True),
    sa.Column('file_format', sa.String(length=10), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('filters_applied', sa.JSON(), nullable=True),
    sa.Column('date_range_start', sa.DateTime(), nullable=True),
    sa.Column('date_range_end', sa.DateTime(), nullable=True),
    sa.Column('requested_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('generation_time_seconds', sa.Float(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('download_count', sa.Integer(), nullable=True),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=True),
    sa.Column('shared_with', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.ForeignKeyConstraint(['requested_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_institution_reports', 'reports', ['institution_id'], unique=False)
    op.create_index('idx_report_status', 'reports', ['status'], unique=False)
    op.create_index('idx_report_type', 'reports', ['report_type'], unique=False)
    op.create_table('standard_mappings',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('document_id', sa.String(length=36), nullable=False),
    sa.Column('standard_id', sa.String(length=36), nullable=False),
    sa.Column('institution_id', sa.String(length=36), nullable=False),
    sa.Column('evidence_text', sa.Text(), nullable=True),
    sa.Column('page_numbers', sa.JSON(), nullable=True),
    sa.Column('confidence', sa.String(length=10), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('mapping_method', sa.String(length=20), nullable=True),
    sa.Column('evidence_strength', sa.String(length=20), nullable=True),
    sa.Column('gap_identified', sa.Boolean(), nullable=True),
    sa.Column('gap_description', sa.Text(), nullable=True),
    sa.Column('recommendations', sa.JSON(), nullable=True),
    sa.Column('reviewed_by_id', sa.String(length=36), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('review_notes', sa.Text(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['standard_id'], ['accreditation_standards.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('document_id', 'standard_id')
    )
    op.create_index('idx_document_mappings', 'standard_mappings', ['document_id'], unique=False)
    op.create_index('idx_institution_mappings', 'standard_mappings', ['institution_id'], unique=False)
    op.create_index('idx_standard_mappings', 'standard_mappings', ['standard_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_standard_mappings', table_name='standard_mappings')
    op.drop_index('idx_institution_mappings', table_name='standard_mappings')
    op.drop_index('idx_document_mappings', table_name='standard_mappings')
    op.drop_table('standard_mappings')
    op.drop_index('idx_report_type', table_name='reports')
    op.drop_index('idx_report_status', table_name='reports')
    op.drop_index('idx_institution_reports', table_name='reports')
    op.drop_table('reports')
    op.drop_index('idx_institution_documents', table_name='documents')
    op.drop_index('idx_document_type', table_name='documents')
    op.drop_index('idx_document_status', table_name='documents')
    op.drop_table('documents')
    op.drop_index('idx_snapshot_date', table_name='compliance_snapshots')
    op.drop_index('idx_institution_snapshots', table_name='compliance_snapshots')
    op.drop_table('compliance_snapshots')
    op.drop_index('idx_audit_user', table_name='audit_logs')
    op.drop_index('idx_audit_timestamp', table_name='audit_logs')
    op.drop_index('idx_audit_institution', table_name='audit_logs')
    op.drop_index('idx_audit_action', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_table('users')
    op.drop_index('idx_job_type', table_name='processing_jobs')
    op.drop_index('idx_job_status', table_name='processing_jobs')
    op.drop_index('idx_job_entity', table_name='processing_jobs')
    op.drop_table('processing_jobs')
    op.drop_table('institutions')
    op.drop_index('idx_accreditor_standards', table_name='accreditation_standards')
    op.drop_table('accreditation_standards')
    # ### end Alembic commands ###