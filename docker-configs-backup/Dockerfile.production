###############################################
# Production Multi-Stage Build
# 1. Build Tailwind CSS assets with Node
# 2. Install Python deps & copy app with slim base
# Result: single small image containing pre-built CSS
###############################################

# Stage 1: Frontend assets
FROM node:20-alpine AS assets
WORKDIR /webapp/web
COPY web/package.json ./package.json
RUN npm install --no-audit --no-fund
COPY web/ ./
RUN npm run build-css

# Stage 2: Python runtime
FROM python:3.11-slim AS runtime
ENV PYTHONDONTWRITEBYTECODE=1 \
	PYTHONUNBUFFERED=1 \
	PIP_NO_CACHE_DIR=1 \
	DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y --no-install-recommends \
	build-essential libffi-dev curl \
	&& rm -rf /var/lib/apt/lists/*

WORKDIR /app
COPY requirements.txt ./
RUN pip install --upgrade pip && pip install -r requirements.txt

# Copy application code
COPY . .

# Copy built Tailwind artifact
COPY --from=assets /webapp/web/static/css/tailwind.css web/static/css/tailwind.css

# Non-root user
RUN useradd --create-home --shell /bin/bash appuser \
	&& chown -R appuser:appuser /app
USER appuser

EXPOSE 8000

HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
  CMD sh -c 'curl -fsS http://127.0.0.1:${PORT:-8000}/health || exit 1'

CMD ["./start.sh"]
