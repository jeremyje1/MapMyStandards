## Example Nginx reverse proxy configuration for MapMyStandards
## Place (after adapting) in /etc/nginx/sites-available/mapmystandards.conf
## Then symlink to sites-enabled and reload nginx.

upstream mapmystandards_fastapi { server 127.0.0.1:8000 fail_timeout=0; }
upstream mapmystandards_flask   { server 127.0.0.1:8001 fail_timeout=0; }

map $http_upgrade $connection_upgrade { default upgrade; '' close; }

server {
    listen 80;
    server_name platform.mapmystandards.ai api.mapmystandards.ai;
    # return 301 https://$host$request_uri;  # enable after TLS
}

# HTTPS block (commented). See README for activation steps.
# server {
#   listen 443 ssl http2;
#   server_name platform.mapmystandards.ai;
#   ssl_certificate /etc/letsencrypt/live/platform.mapmystandards.ai/fullchain.pem;
#   ssl_certificate_key /etc/letsencrypt/live/platform.mapmystandards.ai/privkey.pem;
#   include /etc/letsencrypt/options-ssl-nginx.conf;
#   ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#   location / { proxy_pass http://mapmystandards_fastapi; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection $connection_upgrade; }
#   location /api/legacy/ { rewrite ^/api/legacy/?(.*)$ /$1 break; proxy_pass http://mapmystandards_flask; }
#   location /static/ { alias /opt/mapmystandards/web/; try_files $uri $uri/ =404; add_header Cache-Control "public, max-age=3600"; }
# }
